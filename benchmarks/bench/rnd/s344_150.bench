# circuit:s344
INPUT(START)
INPUT(B0)
INPUT(B1)
INPUT(B2)
INPUT(B3)
INPUT(A0)
INPUT(A1)
INPUT(A2)
INPUT(A3)
INPUT(keyinput0)
INPUT(keyinput1)
INPUT(keyinput2)
INPUT(keyinput3)
INPUT(keyinput4)
INPUT(keyinput5)
INPUT(keyinput6)
INPUT(keyinput7)
INPUT(keyinput8)
INPUT(keyinput9)
INPUT(keyinput10)
INPUT(keyinput11)
INPUT(keyinput12)
INPUT(keyinput13)
INPUT(keyinput14)
INPUT(keyinput15)
INPUT(keyinput16)
INPUT(keyinput17)
INPUT(keyinput18)
INPUT(keyinput19)
INPUT(keyinput20)
INPUT(keyinput21)
INPUT(keyinput22)
INPUT(keyinput23)
INPUT(keyinput24)
INPUT(keyinput25)
INPUT(keyinput26)
INPUT(keyinput27)
INPUT(keyinput28)
INPUT(keyinput29)
INPUT(keyinput30)
INPUT(keyinput31)
INPUT(keyinput32)
INPUT(keyinput33)
INPUT(keyinput34)
INPUT(keyinput35)
INPUT(keyinput36)
INPUT(keyinput37)
INPUT(keyinput38)
INPUT(keyinput39)
INPUT(keyinput40)
INPUT(keyinput41)
INPUT(keyinput42)
INPUT(keyinput43)
INPUT(keyinput44)
INPUT(keyinput45)
INPUT(keyinput46)
INPUT(keyinput47)
INPUT(keyinput48)
INPUT(keyinput49)
INPUT(keyinput50)
INPUT(keyinput51)
INPUT(keyinput52)
INPUT(keyinput53)
INPUT(keyinput54)
INPUT(keyinput55)
INPUT(keyinput56)
INPUT(keyinput57)
INPUT(keyinput58)
INPUT(keyinput59)
INPUT(keyinput60)
INPUT(keyinput61)
INPUT(keyinput62)
INPUT(keyinput63)
INPUT(keyinput64)
INPUT(keyinput65)
INPUT(keyinput66)
INPUT(keyinput67)
INPUT(keyinput68)
INPUT(keyinput69)
INPUT(keyinput70)
INPUT(keyinput71)
INPUT(keyinput72)
INPUT(keyinput73)
INPUT(keyinput74)
INPUT(keyinput75)
INPUT(keyinput76)
INPUT(keyinput77)
INPUT(keyinput78)
INPUT(keyinput79)
INPUT(keyinput80)
INPUT(keyinput81)
INPUT(keyinput82)
INPUT(keyinput83)
INPUT(keyinput84)
INPUT(keyinput85)
INPUT(keyinput86)
INPUT(keyinput87)
INPUT(keyinput88)
INPUT(keyinput89)
INPUT(keyinput90)
INPUT(keyinput91)
INPUT(keyinput92)
INPUT(keyinput93)
INPUT(keyinput94)
INPUT(keyinput95)
INPUT(keyinput96)
INPUT(keyinput97)
INPUT(keyinput98)
INPUT(keyinput99)
INPUT(keyinput100)
INPUT(keyinput101)
INPUT(keyinput102)
INPUT(keyinput103)
INPUT(keyinput104)
INPUT(keyinput105)
INPUT(keyinput106)
INPUT(keyinput107)
INPUT(keyinput108)
INPUT(keyinput109)
INPUT(keyinput110)
INPUT(keyinput111)
INPUT(keyinput112)
INPUT(keyinput113)
INPUT(keyinput114)
INPUT(keyinput115)
INPUT(keyinput116)
INPUT(keyinput117)
INPUT(keyinput118)
INPUT(keyinput119)
INPUT(keyinput120)
INPUT(keyinput121)
INPUT(keyinput122)
INPUT(keyinput123)
INPUT(keyinput124)
INPUT(keyinput125)
INPUT(keyinput126)
INPUT(keyinput127)
INPUT(keyinput128)
INPUT(keyinput129)
INPUT(keyinput130)
INPUT(keyinput131)
INPUT(keyinput132)
INPUT(keyinput133)
INPUT(keyinput134)
INPUT(keyinput135)
INPUT(keyinput136)
INPUT(keyinput137)
INPUT(keyinput138)
INPUT(keyinput139)
INPUT(keyinput140)
INPUT(keyinput141)
INPUT(keyinput142)
INPUT(keyinput143)
INPUT(keyinput144)
INPUT(keyinput145)
INPUT(keyinput146)
INPUT(keyinput147)
INPUT(keyinput148)
INPUT(keyinput149)
OUTPUT(P4)
OUTPUT(P5)
OUTPUT(P6)
OUTPUT(P7)
OUTPUT(P0)
OUTPUT(P1)
OUTPUT(P2)
OUTPUT(P3)
OUTPUT(CNTVCON2)
OUTPUT(CNTVCO2)
OUTPUT(READY)
CT2 = dff( xenc83 )
CT1 = dff( xenc41 )
CT0 = dff( xenc37 )
ACVQN3 = dff( ACVG4VD1 )
ACVQN2 = dff( ACVG3VD1 )
ACVQN1 = dff( xenc127 )
ACVQN0 = dff( xenc4 )
MRVQN3 = dff( xenc74 )
MRVQN2 = dff( xenc135 )
MRVQN1 = dff( xenc76 )
MRVQN0 = dff( xenc109 )
AX3 = dff( AM3 )
AX2 = dff( xenc23 )
AX1 = dff( xenc125 )
AX0 = dff( xenc39 )
CNTVG3VQN = not( xenc114 )
CNTVG2VQN = not( xenc132 )
CNTVG1VQN = not( xenc44 )
xenc120 = not( xenc55 )
xenc5 = not( ACVQN2 )
xenc17 = not( xenc89 )
xenc147 = not( xenc52 )
xenc111 = not( xenc56 )
xenc86 = not( xenc27 )
xenc105 = not( xenc107 )
xenc9 = not( MRVQN0 )
CNTVCON0 = not( xenc44 )
CT1N = not( xenc132 )
ACVPCN = not( START )
CNTVCO0 = not( CNTVG1VQN )
AMVS0N = not( INIT )
xenc123 = not( xenc93 )
BMVS0N = not( xenc93 )
AMVG5VS0P = not( xenc34 )
AMVG4VS0P = not( xenc34 )
AMVG3VS0P = not( xenc34 )
AMVG2VS0P = not( xenc34 )
AD0 = not( xenc7 )
AD1 = not( xenc95 )
AD2 = not( xenc29 )
AD3 = not( xenc124 )
CNTVG3VD1 = not( xenc75 )
CNTVG1VD1 = not( READY )
BMVG5VS0P = not( xenc115 )
BMVG4VS0P = not( xenc115 )
BMVG3VS0P = not( xenc115 )
BMVG2VS0P = not( xenc115 )
SMVS0N = not( xenc47 )
MRVSHLDN = not( xenc47 )
ADDVC1 = not( xenc51 )
SMVG5VS0P = not( xenc72 )
SMVG4VS0P = not( xenc72 )
SMVG3VS0P = not( xenc72 )
SMVG2VS0P = not( xenc72 )
CNTVG1VZ = not( xenc32 )
AM3 = not( xenc99 )
AM2 = not( xenc71 )
AM1 = not( xenc19 )
AM0 = not( xenc35 )
S0 = not( xenc28 )
BM3 = not( xenc30 )
BM2 = not( xenc148 )
BM1 = not( xenc1 )
BM0 = not( xenc146 )
ADDVC2 = not( xenc121 )
S1 = not( xenc87 )
ADDVC3 = not( xenc14 )
S2 = not( ADDVG3VSN )
SM0 = not( xenc133 )
CO = not( xenc45 )
S3 = not( xenc54 )
SM1 = not( xenc6 )
SM3 = not( xenc90 )
SM2 = not( SMVG4VX )
AMVG5VG1VAD1NF = and( xenc34, xenc113 )
AMVG4VG1VAD1NF = and( xenc34, xenc26 )
AMVG3VG1VAD1NF = and( xenc34, xenc118 )
AMVG2VG1VAD1NF = and( xenc34, xenc77 )
BMVG5VG1VAD1NF = and( xenc115, P3 )
BMVG4VG1VAD1NF = and( xenc115, P2 )
BMVG3VG1VAD1NF = and( xenc115, P1 )
BMVG2VG1VAD1NF = and( xenc115, P0 )
AMVG5VG1VAD2NF = and( AMVG5VS0P, A3 )
AMVG4VG1VAD2NF = and( xenc49, A2 )
AMVG3VG1VAD2NF = and( xenc46, A1 )
AMVG2VG1VAD2NF = and( xenc142, A0 )
ADDVG2VCNVAD1NF = and( xenc126, P5 )
ADDVG3VCNVAD1NF = and( xenc138, P6 )
ADDVG4VCNVAD1NF = and( xenc129, P7 )
MRVG3VDVAD1NF = and( xenc47, P3 )
MRVG2VDVAD1NF = and( xenc47, P2 )
MRVG1VDVAD1NF = and( xenc47, P1 )
BMVG5VG1VAD2NF = and( xenc24, B3 )
BMVG4VG1VAD2NF = and( BMVG4VS0P, B2 )
BMVG3VG1VAD2NF = and( xenc2, B1 )
BMVG2VG1VAD2NF = and( xenc84, B0 )
SMVG5VG1VAD1NF = and( xenc72, P7 )
SMVG4VG1VAD1NF = and( xenc72, P6 )
SMVG3VG1VAD1NF = and( xenc72, P5 )
SMVG2VG1VAD1NF = and( xenc72, P4 )
ADDVG2VCNVAD4NF = and( xenc58, xenc126, P5 )
ADDVG2VCNVAD2NF = and( xenc58, ADDVG2VCNVOR1NF )
MRVG4VDVAD1NF = and( xenc47, xenc11 )
MRVG4VDVAD2NF = and( xenc63, xenc98 )
MRVG3VDVAD2NF = and( xenc63, xenc62 )
MRVG2VDVAD2NF = and( xenc63, xenc80 )
MRVG1VDVAD2NF = and( xenc63, xenc16 )
ADDVG2VCNVAD3NF = and( xenc137, xenc121 )
ADDVG3VCNVAD4NF = and( xenc10, xenc138, P6 )
ADDVG3VCNVAD2NF = and( xenc10, ADDVG3VCNVOR1NF )
ADDVG3VCNVAD3NF = and( xenc60, xenc14 )
SMVG2VG1VAD2NF = and( xenc143, xenc110 )
ADDVG4VCNVAD4NF = and( xenc122, xenc129, P7 )
ADDVG4VCNVAD2NF = and( xenc122, xenc78 )
ADDVG4VCNVAD3NF = and( xenc48, xenc45 )
SMVG3VG1VAD2NF = and( xenc15, xenc88 )
SMVG5VG1VAD2NF = and( xenc130, CO )
SMVG4VG1VAD2NF = and( SMVG4VS0P, xenc136 )
ADDVG1VPVOR1NF = or( xenc102, P4 )
ADDVG2VCNVOR1NF = or( xenc126, P5 )
ADDVG3VCNVOR1NF = or( xenc138, P6 )
ADDVG4VCNVOR1NF = or( xenc129, P7 )
CNTVG3VG2VOR1NF = or( xenc114, xenc91 )
CNTVG2VG2VOR1NF = or( xenc132, xenc31 )
ADDVG2VCNVOR2NF = or( xenc58, xenc126, P5 )
ADDVG3VCNVOR2NF = or( xenc10, xenc138, P6 )
ADDVG4VCNVOR2NF = or( xenc122, xenc129, P7 )
READYN = nand( xenc44, xenc65, xenc114 )
AD0N = nand( P0, xenc77 )
AD1N = nand( P0, xenc118 )
AD2N = nand( P0, xenc26 )
AD3N = nand( P0, xenc113 )
CNTVCON1 = nand( xenc132, CNTVCO0 )
xenc81 = nand( xenc114, xenc12 )
ADDVG1VCN = nand( xenc102, P4 )
CNTVG3VZ1 = nand( xenc114, xenc91 )
CNTVG2VZ1 = nand( xenc132, xenc31 )
CNTVG1VZ1 = nand( xenc44, xenc61 )
ADDVG1VP = nand( ADDVG1VPVOR1NF, xenc51 )
CNTVG3VZ = nand( xenc144, xenc97 )
CNTVG2VZ = nand( xenc103, xenc149 )
ACVG1VD1 = nand( xenc141, xenc22 )
ACVG2VD1 = nand( xenc141, xenc25 )
ACVG4VD1 = nand( xenc141, SM3 )
ACVG3VD1 = nand( xenc141, SM2 )
INIT = nor( xenc44, xenc132, xenc114 )
CNTVCO1 = nor( xenc42, xenc18 )
xenc13 = nor( xenc70, xenc75 )
ADSH = nor( READY, INIT )
CNTVG2VD1 = nor( READY, xenc18 )
AMVG5VX = nor( xenc36, xenc57 )
AMVG4VX = nor( xenc117, xenc134 )
AMVG3VX = nor( xenc38, xenc67 )
AMVG2VX = nor( xenc100, xenc106 )
BMVG5VX = nor( xenc20, xenc108 )
BMVG4VX = nor( xenc53, BMVG4VG1VAD1NF )
BMVG3VX = nor( xenc68, xenc112 )
BMVG2VX = nor( xenc0, BMVG2VG1VAD1NF )
CNTVG3VD = nor( xenc79, START )
CNTVG2VD = nor( xenc145, START )
CNTVG1VD = nor( xenc104, START )
ADDVG2VCN = nor( ADDVG2VCNVAD2NF, ADDVG2VCNVAD1NF )
MRVG4VD = nor( xenc73, xenc66 )
MRVG3VD = nor( xenc101, xenc82 )
MRVG2VD = nor( xenc96, xenc40 )
MRVG1VD = nor( xenc8, xenc59 )
ADDVG2VSN = nor( xenc21, xenc43 )
ADDVG3VCN = nor( xenc92, xenc140 )
ADDVG3VSN = nor( xenc128, ADDVG3VCNVAD3NF )
SMVG2VX = nor( xenc139, xenc116 )
ADDVG4VCN = nor( xenc85, xenc69 )
ADDVG4VSN = nor( xenc131, ADDVG4VCNVAD3NF )
SMVG3VX = nor( xenc64, xenc94 )
SMVG5VX = nor( xenc50, xenc119 )
SMVG4VX = nor( xenc3, xenc33 )
xenc0 = xor( BMVG2VG1VAD2NF, keyinput0 )
xenc1 = xor( BMVG3VX, keyinput1 )
xenc2 = xnor( BMVG3VS0P, keyinput2 )
xenc3 = xnor( SMVG4VG1VAD2NF, keyinput3 )
xenc4 = xor( ACVG1VD1, keyinput4 )
P6 = xor( xenc5, keyinput5 )
xenc6 = xor( SMVG3VX, keyinput6 )
xenc7 = xor( AD0N, keyinput7 )
xenc8 = xor( MRVG1VDVAD2NF, keyinput8 )
P0 = xnor( xenc9, keyinput9 )
xenc10 = xor( ADDVC2, keyinput10 )
xenc11 = xor( S0, keyinput11 )
xenc12 = xnor( CNTVCO1, keyinput12 )
CNTVCO2 = xnor( xenc13, keyinput13 )
xenc14 = xor( ADDVG3VCN, keyinput14 )
xenc15 = xnor( SMVG3VS0P, keyinput15 )
xenc16 = xor( BM0, keyinput16 )
P5 = xor( xenc17, keyinput17 )
xenc18 = xnor( CNTVCON0, keyinput18 )
xenc19 = xor( AMVG3VX, keyinput19 )
xenc20 = xnor( BMVG5VG1VAD2NF, keyinput20 )
xenc21 = xor( ADDVG2VCNVAD4NF, keyinput21 )
xenc22 = xor( SM0, keyinput22 )
xenc23 = xnor( AM2, keyinput23 )
xenc24 = xor( BMVG5VS0P, keyinput24 )
xenc25 = xor( SM1, keyinput25 )
xenc26 = xnor( AX2, keyinput26 )
xenc27 = xor( MRVQN2, keyinput27 )
xenc28 = xnor( ADDVG1VP, keyinput28 )
xenc29 = xnor( AD2N, keyinput29 )
xenc30 = xor( BMVG5VX, keyinput30 )
xenc31 = xor( CNTVG2VD1, keyinput31 )
xenc32 = xnor( CNTVG1VZ1, keyinput32 )
xenc33 = xnor( SMVG4VG1VAD1NF, keyinput33 )
xenc34 = xnor( AMVS0N, keyinput34 )
xenc35 = xor( AMVG2VX, keyinput35 )
xenc36 = xor( AMVG5VG1VAD2NF, keyinput36 )
xenc37 = xor( CNTVG1VD, keyinput37 )
xenc38 = xor( AMVG3VG1VAD2NF, keyinput38 )
xenc39 = xnor( AM0, keyinput39 )
xenc40 = xor( MRVG2VDVAD1NF, keyinput40 )
xenc41 = xnor( CNTVG2VD, keyinput41 )
xenc42 = xor( CNTVG2VQN, keyinput42 )
xenc43 = xor( ADDVG2VCNVAD3NF, keyinput43 )
xenc44 = xor( CT0, keyinput44 )
xenc45 = xor( ADDVG4VCN, keyinput45 )
xenc46 = xnor( AMVG3VS0P, keyinput46 )
xenc47 = xnor( ADSH, keyinput47 )
xenc48 = xnor( ADDVG4VCNVOR2NF, keyinput48 )
xenc49 = xnor( AMVG4VS0P, keyinput49 )
xenc50 = xor( SMVG5VG1VAD2NF, keyinput50 )
xenc51 = xnor( ADDVG1VCN, keyinput51 )
xenc52 = xor( ACVQN0, keyinput52 )
xenc53 = xnor( BMVG4VG1VAD2NF, keyinput53 )
xenc54 = xnor( ADDVG4VSN, keyinput54 )
xenc55 = xnor( ACVQN3, keyinput55 )
xenc56 = xor( MRVQN3, keyinput56 )
xenc57 = xnor( AMVG5VG1VAD1NF, keyinput57 )
xenc58 = xor( ADDVC1, keyinput58 )
xenc59 = xor( MRVG1VDVAD1NF, keyinput59 )
xenc60 = xnor( ADDVG3VCNVOR2NF, keyinput60 )
xenc61 = xor( CNTVG1VD1, keyinput61 )
xenc62 = xor( BM2, keyinput62 )
xenc63 = xnor( MRVSHLDN, keyinput63 )
xenc64 = xor( SMVG3VG1VAD2NF, keyinput64 )
xenc65 = xor( CT1N, keyinput65 )
xenc66 = xnor( MRVG4VDVAD1NF, keyinput66 )
xenc67 = xnor( AMVG3VG1VAD1NF, keyinput67 )
xenc68 = xnor( BMVG3VG1VAD2NF, keyinput68 )
xenc69 = xor( ADDVG4VCNVAD1NF, keyinput69 )
xenc70 = xnor( CNTVG3VQN, keyinput70 )
xenc71 = xnor( AMVG4VX, keyinput71 )
xenc72 = xor( SMVS0N, keyinput72 )
xenc73 = xnor( MRVG4VDVAD2NF, keyinput73 )
xenc74 = xor( MRVG4VD, keyinput74 )
xenc75 = xnor( CNTVCON1, keyinput75 )
xenc76 = xor( MRVG2VD, keyinput76 )
xenc77 = xor( AX0, keyinput77 )
xenc78 = xnor( ADDVG4VCNVOR1NF, keyinput78 )
xenc79 = xor( CNTVG3VZ, keyinput79 )
xenc80 = xnor( BM1, keyinput80 )
CNTVCON2 = xor( xenc81, keyinput81 )
xenc82 = xor( MRVG3VDVAD1NF, keyinput82 )
xenc83 = xor( CNTVG3VD, keyinput83 )
xenc84 = xnor( BMVG2VS0P, keyinput84 )
xenc85 = xor( ADDVG4VCNVAD2NF, keyinput85 )
P2 = xnor( xenc86, keyinput86 )
xenc87 = xor( ADDVG2VSN, keyinput87 )
xenc88 = xor( S2, keyinput88 )
xenc89 = xor( ACVQN1, keyinput89 )
xenc90 = xor( SMVG5VX, keyinput90 )
xenc91 = xor( CNTVG3VD1, keyinput91 )
xenc92 = xnor( ADDVG3VCNVAD2NF, keyinput92 )
xenc93 = xnor( READYN, keyinput93 )
xenc94 = xnor( SMVG3VG1VAD1NF, keyinput94 )
xenc95 = xor( AD1N, keyinput95 )
xenc96 = xor( MRVG2VDVAD2NF, keyinput96 )
xenc97 = xnor( CNTVG3VZ1, keyinput97 )
xenc98 = xor( BM3, keyinput98 )
xenc99 = xor( AMVG5VX, keyinput99 )
xenc100 = xor( AMVG2VG1VAD2NF, keyinput100 )
xenc101 = xnor( MRVG3VDVAD2NF, keyinput101 )
xenc102 = xor( AD0, keyinput102 )
xenc103 = xnor( CNTVG2VG2VOR1NF, keyinput103 )
xenc104 = xnor( CNTVG1VZ, keyinput104 )
P1 = xor( xenc105, keyinput105 )
xenc106 = xor( AMVG2VG1VAD1NF, keyinput106 )
xenc107 = xor( MRVQN1, keyinput107 )
xenc108 = xnor( BMVG5VG1VAD1NF, keyinput108 )
xenc109 = xor( MRVG1VD, keyinput109 )
xenc110 = xnor( S1, keyinput110 )
P3 = xnor( xenc111, keyinput111 )
xenc112 = xor( BMVG3VG1VAD1NF, keyinput112 )
xenc113 = xor( AX3, keyinput113 )
xenc114 = xnor( CT2, keyinput114 )
xenc115 = xor( BMVS0N, keyinput115 )
xenc116 = xnor( SMVG2VG1VAD1NF, keyinput116 )
xenc117 = xnor( AMVG4VG1VAD2NF, keyinput117 )
xenc118 = xnor( AX1, keyinput118 )
xenc119 = xor( SMVG5VG1VAD1NF, keyinput119 )
P7 = xor( xenc120, keyinput120 )
xenc121 = xor( ADDVG2VCN, keyinput121 )
xenc122 = xnor( ADDVC3, keyinput122 )
READY = xnor( xenc123, keyinput123 )
xenc124 = xor( AD3N, keyinput124 )
xenc125 = xnor( AM1, keyinput125 )
xenc126 = xor( AD1, keyinput126 )
xenc127 = xnor( ACVG2VD1, keyinput127 )
xenc128 = xnor( ADDVG3VCNVAD4NF, keyinput128 )
xenc129 = xor( AD3, keyinput129 )
xenc130 = xnor( SMVG5VS0P, keyinput130 )
xenc131 = xor( ADDVG4VCNVAD4NF, keyinput131 )
xenc132 = xor( CT1, keyinput132 )
xenc133 = xor( SMVG2VX, keyinput133 )
xenc134 = xnor( AMVG4VG1VAD1NF, keyinput134 )
xenc135 = xor( MRVG3VD, keyinput135 )
xenc136 = xnor( S3, keyinput136 )
xenc137 = xor( ADDVG2VCNVOR2NF, keyinput137 )
xenc138 = xnor( AD2, keyinput138 )
xenc139 = xor( SMVG2VG1VAD2NF, keyinput139 )
xenc140 = xnor( ADDVG3VCNVAD1NF, keyinput140 )
xenc141 = xnor( ACVPCN, keyinput141 )
xenc142 = xor( AMVG2VS0P, keyinput142 )
xenc143 = xor( SMVG2VS0P, keyinput143 )
xenc144 = xor( CNTVG3VG2VOR1NF, keyinput144 )
xenc145 = xor( CNTVG2VZ, keyinput145 )
xenc146 = xnor( BMVG2VX, keyinput146 )
P4 = xor( xenc147, keyinput147 )
xenc148 = xor( BMVG4VX, keyinput148 )
xenc149 = xor( CNTVG2VZ1, keyinput149 )
